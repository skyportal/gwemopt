# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
  merge_group:

  # run the pipeline on the 0th minute of the 0th hour of day 1 and 15 every month
  schedule:
    - cron: '0 0 1,15 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    # Specify the python versions to test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run tests
        run: coverage run -m pytest -v -s

      - name: Run Coveralls
        if: ${{ success() }}
        run: |
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Echo tag name
#        run: echo "Tag is ${{ github.ref }}, Deploy is ${{ startsWith(github.ref, 'refs/tags/') && matrix.python-version == 3.9}}"
#
#      - name: Install pypa/build
#        run: >-
#          python -m
#          pip install
#          build
#          --user
#
#      - name: Build a binary wheel and a source tarball
#        run: >-
#          python -m
#          build
#          --sdist
#          --wheel
#          --outdir dist/
#          .
#
#      - name: Publish distribution ðŸ“¦ to PyPI
#        if: ${{ startsWith(github.ref, 'refs/tags/') && success() && matrix.python-version == 3.9}}
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}
